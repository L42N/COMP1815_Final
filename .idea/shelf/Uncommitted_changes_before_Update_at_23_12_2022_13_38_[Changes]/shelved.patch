Index: src/MainGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import KotlinAlgo.MergeSort;\r\nimport KotlinClass.Book;\r\nimport KotlinClass.DataPersistence;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.LineNumberInputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\nimport javax.swing.JButton;\r\n\r\n\r\npublic class MainGUI {\r\n    private JPanel MainPanel;\r\n    private JTable InfoTable;\r\n    private JScrollPane scrollPane;\r\n    private JButton loadButton;\r\n    private JButton searchButton;\r\n    private JButton sortButton;\r\n    private JTextField searchField;\r\n    private JRadioButton BookButton;\r\n    private JRadioButton authorRadioButton;\r\n    private JTextField loadField;\r\n    private JTextField timeTextField;\r\n    private JComboBox sortCombobox;\r\n    private JLabel RuntimeLabel;\r\n    private JButton pubAddButton;\r\n    private JButton NUKEButton;\r\n    private JButton refreshButton;\r\n    private JTabbedPane tabbedPane;\r\n    private JPanel runTimePanel;\r\n    private JPanel controlPanel;\r\n    private JButton addNewEntryButton;\r\n    private JButton deleteButton;\r\n    private JButton editButton;\r\n    private JTable authInfoTable;\r\n    private JButton authExitButton;\r\n    private JButton authLoadButton;\r\n    private JButton authSearchButton;\r\n    private JButton AuthRefeshButton;\r\n    private JTextField authLoad;\r\n    private JTextField authSearchEntry;\r\n    private JButton authAdd;\r\n    private JButton authEdit;\r\n    private JButton authDelete;\r\n    private JScrollPane authScrollPane;\r\n    private JPanel bookPanel;\r\n    private JPanel authControlPanel;\r\n    private JTable pubInfoTable;\r\n    private JButton pubLoadButton;\r\n    private JButton pubSearchButton;\r\n    private JButton pubRefreshButton;\r\n    private JTextField pubLoad;\r\n    private JTextField pubSearchEntry;\r\n    private JButton pubEditButton;\r\n    private JButton pubDeleteButton;\r\n    private JPanel authPanel;\r\n    private JPanel pubPanel;\r\n    private JScrollPane pubScrollPane;\r\n    private JButton pubExitButton;\r\n    private JPanel pubControlPanel;\r\n\r\n    private List<Book> books;\r\n\r\n\r\n    public MainGUI() {\r\n        // Load books by retrieving path from text field for use in getBooks function\r\n        loadButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                books = DataPersistence.INSTANCE.getBooks(loadField.getText());\r\n                refreshTable();\r\n\r\n            }\r\n        });\r\n\r\n        // Load authors by retrieving path from text field for use in getAuthors function\r\n        authLoadButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                var authorImport = DataPersistence.INSTANCE.getAuthors(authLoad.getText());\r\n                DefaultTableModel authModel = (DefaultTableModel)authInfoTable.getModel();\r\n                authorImport.forEach(author -> {\r\n                    Object[] authRow = new Object[]{\r\n                            author.getId(),\r\n                            author.getFirstName(),\r\n                            author.getLastName()\r\n                    };\r\n                    authModel.addRow(authRow);\r\n                });\r\n            }\r\n        });\r\n\r\n        // Load publishers by retrieving path from text field for use in getPublishers function\r\n        pubLoadButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                var pubImport = DataPersistence.INSTANCE.getPublishers(pubLoad.getText());\r\n                DefaultTableModel pubModel = (DefaultTableModel)pubInfoTable.getModel();\r\n                pubImport.forEach(pub -> {\r\n                    Object[] pubRow = new Object[]{\r\n                            pub.getId(),\r\n                            pub.getPubName()\r\n                    };\r\n                    pubModel.addRow(pubRow);\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        addNewEntryButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n\r\n            }\r\n        });\r\n        deleteButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n            }\r\n        });\r\n        editButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n            }\r\n        });\r\n        refreshButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n            }\r\n        });\r\n\r\n        // Execute selected sort algorithm\r\n        sortButton.addActionListener(new ActionListener() {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource() == sortButton){\r\n                    // Create ArrayList for authors and books to sort\r\n                    ArrayList<String> sortedAuthors = new ArrayList<>();\r\n                    ArrayList<String> sortedBooks = new ArrayList<>();\r\n                    // Scan CSV and append author and book names to corresponding ArrayLists\r\n                    try {\r\n                        Scanner sc = new Scanner(new File(\"resources/Book.csv\"));\r\n                        while (sc.hasNext()) {\r\n                            String line = sc.nextLine();\r\n                            String[] sortedItems = line.split(\",\");  // Set comma as delimiter pattern\r\n                            sortedAuthors.add(sortedItems[2]);\r\n                            sortedBooks.add(sortedItems[1]);\r\n\r\n                        }\r\n                    } catch (FileNotFoundException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n\r\n                    // Display unsorted array list\r\n//                    System.out.println(\"Before Authors\");\r\n//                    System.out.println(sortedAuthors);\r\n//\r\n//                    System.out.println(\"Before Books\");\r\n//                    System.out.println(sortedBooks);\r\n//\r\n                    // Execute algorithm & record timings\r\n                    long startTime = System.nanoTime();\r\n                    MergeSort test = new MergeSort();\r\n                    long endTime = System.nanoTime();\r\n\r\n                    // Calculate algorithm timings and display results\r\n                    System.out.println(\"That took \" + (endTime - startTime) + \" nanoseconds\");\r\n                    String timings = String.valueOf((endTime - startTime) / 1000);\r\n                    timeTextField.setText(timings + \" milliseconds\");\r\n\r\n//                    MergeSort booktest = new MergeSort((sortedBooks));\r\n\r\n\r\n//                    test.forEach();\r\n//                    test.sortAuthors();\r\n//                    test.showSortedAuthors();\r\n//                    System.out.println(\"After Authors \");\r\n//\r\n//////                    booktest.forEach();\r\n//                    test.sortBooks();\r\n//                    test.showSortedBooks();\r\n//                    System.out.println(\"After Books \");\r\n                    test.mergeSort(books);\r\n                    refreshTable();\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        // Terminate code\r\n        NUKEButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                System.exit(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Create infotables for book, author and publisher with respective columns\r\n    private void createUIComponents() {\r\n        // TODO: place custom component creation code here\r\n        Object[] mainCols = {\"ID\", \"Title\", \"Author\" ,\"Year\", \"Publisher\", \"Subject\"};\r\n        InfoTable = new JTable(new DefaultTableModel(mainCols, 0));\r\n        scrollPane = new JScrollPane(InfoTable);\r\n\r\n        Object[] authCols = {\"ID\", \"First Name\", \"Surname\" };\r\n        authInfoTable = new JTable(new DefaultTableModel(authCols, 0));\r\n        authScrollPane = new JScrollPane(authInfoTable);\r\n\r\n        Object[] pubCols = {\"ID\", \"Publisher Name\"};\r\n        pubInfoTable = new JTable(new DefaultTableModel(pubCols, 0));\r\n        pubScrollPane = new JScrollPane(pubInfoTable);\r\n\r\n    }\r\n\r\n    //Create main frame\r\n    public static void main(String[] args) {\r\n        JFrame frame = new JFrame(\"GUIBOI\");\r\n        frame.setContentPane(new MainGUI().MainPanel);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.pack();\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setVisible(true);\r\n    }\r\n\r\n    // Refresh infotable (to be used after sort algorithm)\r\n    public void refreshTable() {\r\n        DefaultTableModel bookModel = (DefaultTableModel) InfoTable.getModel();\r\n        bookModel.setRowCount(0);\r\n        books.forEach(book -> {\r\n            Object[] bookRow = new Object[]{\r\n                    book.getId(),\r\n                    book.getTitle(),\r\n                    book.getAuthors(),\r\n                    book.getYearOfPublication(),\r\n                    book.getPublisher(),\r\n                    book.getSubject()\r\n            };\r\n            bookModel.addRow(bookRow);\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/MainGUI.java b/src/MainGUI.java
--- a/src/MainGUI.java	(revision 03fc5d6e3ed601f882563afe7dc1afc3eaab42a0)
+++ b/src/MainGUI.java	(date 1671753642182)
@@ -146,21 +146,7 @@
             public void actionPerformed(ActionEvent e) {
                 if(e.getSource() == sortButton){
                     // Create ArrayList for authors and books to sort
-                    ArrayList<String> sortedAuthors = new ArrayList<>();
-                    ArrayList<String> sortedBooks = new ArrayList<>();
-                    // Scan CSV and append author and book names to corresponding ArrayLists
-                    try {
-                        Scanner sc = new Scanner(new File("resources/Book.csv"));
-                        while (sc.hasNext()) {
-                            String line = sc.nextLine();
-                            String[] sortedItems = line.split(",");  // Set comma as delimiter pattern
-                            sortedAuthors.add(sortedItems[2]);
-                            sortedBooks.add(sortedItems[1]);
 
-                        }
-                    } catch (FileNotFoundException ex) {
-                        throw new RuntimeException(ex);
-                    }
 
                     // Display unsorted array list
 //                    System.out.println("Before Authors");
Index: src/KotlinClass/DataPersistence.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package KotlinClass\r\nimport java.io.File\r\n\r\nobject DataPersistence {\r\n\r\n    //Return mutable list of books by calling bookToRows function\r\n    fun getBooks(path: String): List<Book> {\r\n//        val rows = bookToRows(path)\r\n//        println(rows)\r\n        return bookToRows(path)\r\n  }\r\n\r\n    //Return mutable list of authors by calling authToRows function\r\n    fun getAuthors(path: String): List<Author> {\r\n        val rows = authToRows(path)\r\n        println(rows)\r\n        return rows\r\n    }\r\n\r\n    //Return mutable list of publishers by calling pubToRows function\r\n    fun getPublishers(path: String): List<Pub>{\r\n        val rows = pubToRows(path)\r\n        println(rows)\r\n        return rows\r\n    }\r\n\r\n    // Create a mutable list of books by reading the CSV of books and adding each row\r\n    fun bookToRows(path: String): MutableList<Book> {\r\n        val books:MutableList<Book> = mutableListOf()\r\n        File(path).forEachLine { line ->\r\n            val row = line.split(\",\")\r\n            val id:String = row[0]\r\n            val title:String = row[1]\r\n            val author:String = row[2]\r\n            val year:String = row[3]\r\n            val publish:String = row[4]\r\n            val subject:String = row[5]\r\n\r\n            books.add(Book(id, title, author, year, publish, subject))\r\n        }\r\n        return books\r\n    }\r\n\r\n    // Create a mutable list of authors by reading the CSV of authors and adding each row\r\n    fun authToRows(path:String): MutableList<Author>{\r\n        val authors:MutableList<Author> = mutableListOf()\r\n        File(path).forEachLine { line ->\r\n            val row = line.split(\",\")\r\n            val id:String = row[0]\r\n            val firstname:String = row[1]\r\n            val surname:String = row[2]\r\n\r\n            authors.add(Author(id, firstname, surname))\r\n        }\r\n        return authors\r\n    }\r\n\r\n    // Create a mutable list of publishers by reading the CSV of publishers and adding each row\r\n    fun pubToRows(path:String): MutableList<Pub>{\r\n        val pubs:MutableList<Pub> = mutableListOf()\r\n        File(path).forEachLine { line ->\r\n            val row = line.split(\",\")\r\n            val id:String = row[0]\r\n            val pubname:String = row[1]\r\n\r\n            pubs.add(Pub(id, pubname))\r\n        }\r\n        return pubs\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/KotlinClass/DataPersistence.kt b/src/KotlinClass/DataPersistence.kt
--- a/src/KotlinClass/DataPersistence.kt	(revision 03fc5d6e3ed601f882563afe7dc1afc3eaab42a0)
+++ b/src/KotlinClass/DataPersistence.kt	(date 1671753621828)
@@ -1,6 +1,7 @@
 package KotlinClass
 import java.io.File
 
+
 object DataPersistence {
 
     //Return mutable list of books by calling bookToRows function
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fd832a2c-f1f2-4932-9b5d-a82797f103df\" name=\"Changes\" comment=\"merge and bubble done\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Scala Object\" />\r\n        <option value=\"Package Object\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"Kotlin Object\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2IVBuvUr3qLGaQ8AyzF29KfGn6w\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;UI_DESIGNER_EDITOR_MODE.PaletteManager.WIDTH&quot;: &quot;165&quot;,\r\n    &quot;UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH&quot;: &quot;363&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/lenovo/Downloads/IntellijScalaToKotlin-0.1.1.zip&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\lenovo\\IdeaProjects\\COMP1815_Trial\\resources\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"SortingAlgo\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.MainGUI (3)\">\r\n    <configuration name=\"MainGUI (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainGUI\" />\r\n      <module name=\"COMP1815_Trial\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainGUI (2)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainGUI\" />\r\n      <module name=\"COMP1815_Trial\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainGUI (3)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainGUI\" />\r\n      <module name=\"COMP1815_Trial\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainGUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainGUI\" />\r\n      <module name=\"COMP1815_Trial\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MainGUI (3)\" />\r\n        <item itemvalue=\"Application.MainGUI (2)\" />\r\n        <item itemvalue=\"Application.MainGUI (1)\" />\r\n        <item itemvalue=\"Application.MainGUI\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"ScalaProjectSettings\">\r\n    <option name=\"scala3DisclaimerShown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fd832a2c-f1f2-4932-9b5d-a82797f103df\" name=\"Changes\" comment=\"\" />\r\n      <created>1670257099503</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1670257099503</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"New GUI. Still need the buttons to work\">\r\n      <created>1670283685948</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670283685948</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"New GUI. Still need the buttons to work\">\r\n      <created>1670283789206</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670283789206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"New GUI. Still need the buttons to work\">\r\n      <created>1670284893577</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670284893577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"New GUI. Still need the buttons to work\">\r\n      <created>1670285096060</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670285096060</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"New GUI. Still need the buttons to work\">\r\n      <created>1670285342054</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670285342054</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Added More classes. Still need to work on GUI\">\r\n      <created>1670285400162</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670285400162</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added More classes. Still need to work on GUI\">\r\n      <created>1670285447834</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670285447834</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added kotlin Classes\">\r\n      <created>1670798393153</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670798393153</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added kotlin Classes\">\r\n      <created>1670798409473</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670798409473</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Kotlin Data Persistence done\">\r\n      <created>1670876287716</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670876287716</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Kotlin Data Persistence done\">\r\n      <created>1670876355541</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670876355541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Deleted Java Class\">\r\n      <created>1670877829201</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670877829201</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Deleted Java Class\">\r\n      <created>1670877847729</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670877847729</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Deleted test classes from the Scala lab\">\r\n      <created>1670878816810</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670878816810</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Updated GUI with more components\">\r\n      <created>1671064754028</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671064754028</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Updated GUI with more components\">\r\n      <created>1671064786042</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671064786042</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Updated GUI with more components\">\r\n      <created>1671064905572</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671064905572</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Updated GUI with more components. All load buttons work\">\r\n      <created>1671463724875</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671463724875</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Added timings to MergeSort and results to timeTextField\">\r\n      <created>1671721556451</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671721556451</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"20\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n        <option value=\"Space.CommitStatus\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"042a86f2-6700-48a2-bc4a-4de7ad25308f\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"042a86f2-6700-48a2-bc4a-4de7ad25308f\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"New GUI. Still need the buttons to work\" />\r\n    <MESSAGE value=\"Added More classes. Still need to work on GUI\" />\r\n    <MESSAGE value=\"Added kotlin Classes\" />\r\n    <MESSAGE value=\"Kotlin Data Persistence done\" />\r\n    <MESSAGE value=\"Deleted Java Class\" />\r\n    <MESSAGE value=\"Deleted test classes from the Scala lab\" />\r\n    <MESSAGE value=\"Updated GUI with more components\" />\r\n    <MESSAGE value=\"Updated GUI with more components. All load buttons work\" />\r\n    <MESSAGE value=\"Added timings to MergeSort and results to timeTextField\" />\r\n    <MESSAGE value=\"merge and bubble done\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"merge and bubble done\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 03fc5d6e3ed601f882563afe7dc1afc3eaab42a0)
+++ b/.idea/workspace.xml	(date 1671753642561)
@@ -4,7 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fd832a2c-f1f2-4932-9b5d-a82797f103df" name="Changes" comment="merge and bubble done" />
+    <list default="true" id="fd832a2c-f1f2-4932-9b5d-a82797f103df" name="Changes" comment="merge and bubble done">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_15_19__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_15_19__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_12_2022_17_27__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_12_2022_17_27__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/KotlinClass/DataPersistence.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/KotlinClass/DataPersistence.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/MainGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/MainGUI.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -26,6 +32,9 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/src/MainGUI.java" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
